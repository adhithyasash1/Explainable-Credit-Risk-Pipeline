name: CI-CD Pipeline for Credit Risk API

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-central1
  ARTIFACT_REPO: credit-risk-repo
  IMAGE_NAME: credit-risk-api
  CLUSTER_NAME: credit-risk-cluster
  ZONE: us-central1-a

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run Unit Tests
        run: |
          pytest tests/ -v

  build-and-push:
    name: Build and Push Docker Image
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies for model download
        run: |
          pip install mlflow pandas scikit-learn xgboost shap joblib
      
      - name: Create dummy artifacts
        run: python3 scripts/create_dummy_artifacts.py

      - name: Download or create model artifacts
        run: |
          python scripts/download_model.py || python scripts/create_dummy_artifacts.py

      - name: Verify artifacts exist
        run: |
          ls -la app/
          echo "Checking for required files..."
          test -f app/model.joblib && echo "✓ model.joblib exists"
          test -f app/explainer.joblib && echo "✓ explainer.joblib exists"
          test -f app/feature_names.joblib && echo "✓ feature_names.joblib exists"
          test -f app/global_feature_importance.json && echo "✓ global_feature_importance.json exists"

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_TOKEN }}

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Build Docker image
        run: |
          docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
          docker tag ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                     ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to Artifact Registry
        run: |
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:latest

  deploy-to-gke:
    name: Deploy to GKE
    needs: build-and-push
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCP_TOKEN }}
          
      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v1'
        
      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          
      - name: Get GKE credentials
        run: |
          gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} \
            --zone ${{ env.ZONE }} \
            --project ${{ env.PROJECT_ID }}
        
      - name: Update deployment image
        run: |
          kubectl set image deployment/credit-risk-deployment \
            credit-risk-api-container=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
            --record
          
      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment/credit-risk-deployment --timeout=5m
          
      - name: Verify deployment
        run: |
          echo "Checking deployment status..."
          kubectl get deployments
          echo "Checking pods..."
          kubectl get pods
          echo "Checking service..."
          kubectl get service credit-risk-service
